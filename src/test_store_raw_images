from defer import return_value
import pytest
import load_images_neg as load
from unittest.mock import patch
import os
import cv2
from defer import return_value

@pytest.mark.parametrize(
    "dire",
   [
        (""),
        ("/images/neg")
    ]
)


def test_store_raw_image(dire):
    path = dire
    assert load.store_raw_images(path) == None


def test_RedimensionarImg(dire):

    path = dire  # comprueba dentro de la ruta
    for img in os.listdir(path):
        img_path = os.path.join(path, img)
        print(img_path)
        img_orginal = cv2.imread(img_path)
        alto, ancho = img_orginal.shape[:2]  # funcoonqueobtieneanchioyalto de la imagen
        print(alto)
        print(ancho)
        img_redimensionar = cv2.resize(img_orginal, (100, 100))
        altoR, anchoR = img_redimensionar.shape[:2]
        print(altoR)
        print(anchoR)
        cv2.imwrite(f"{path}/" + str(1) + ".jpg", img_redimensionar)
        assert (img_path == "killbill.jpg")  # comprueba que lista los archivos de la carpeta
